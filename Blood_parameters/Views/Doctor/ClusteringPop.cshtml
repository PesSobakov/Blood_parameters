@{
    ViewData["Title"] = ViewBag.Title;
}
@model Int32Container

@section Breadcrumbs {
    <div class="flex-left breadcrumb">
        <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Index">Головна</a>
        <span>></span>
        <a class="nav-link" asp-area="" asp-controller="Doctor" asp-action="Index">Лікар</a>
        <span>></span>
        <a class="nav-link" asp-area="" asp-controller="Doctor" asp-action="Index" asp-fragment="ClusteringHome">Кластеризація</a>
        <span>></span>
        @switch ((string)ViewBag.Controller)
        {
            case "ClusteringGeneralBloodTestK":
                <a class="nav-link" asp-area="" asp-controller="Doctor" asp-action="ClusteringGeneralBloodTest">Кластеризація за загальним аналізом крові</a>
                break;
            case "ClusteringBloodGlucoseAndCholesterolK":
                <a class="nav-link" asp-area="" asp-controller="Doctor" asp-action="ClusteringBloodGlucoseAndCholesterol">Кластеризація за рівнем глюкози та холестерину</a>
                break;
            case "ClusteringBiochemicalBloodAnalysisK":
                <a class="nav-link" asp-area="" asp-controller="Doctor" asp-action="ClusteringBiochemicalBloodAnalysis">Кластеризація за біохімічним аналізом крові</a>
                break;
            case "ClusteringBloodPressureK":
                <a class="nav-link" asp-area="" asp-controller="Doctor" asp-action="ClusteringBloodPressure">Кластеризація за артеріальним тиском</a>
                break;
            default:
                <a class="nav-link" asp-area="" asp-controller="Doctor" asp-action="ClusteringGeneralBloodTest">Кластеризація за загальним аналізом крові</a>
                break;
        }
    </div>
}

    @section Styles {
    @Html.Raw(MyHtmlHelper.BootstrapTableStyles(this.Context))
}

    <div>
        @Html.ValidationSummary()
    @if (ViewBag.Error != null)
    {
        <div> @ViewBag.Error </div>
    }

    @using (Html.BeginForm((string)ViewBag.Controller, "Doctor", FormMethod.Post))
    {
        <table>
            <tr><td>Кількість кластерів:</td><td>@Html.TextBoxFor(x => x.id)</td></tr>
        </table>
        <input type="submit" value="Кластеризувати" />
    }
    @if (ViewBag.FatalError == null)
    {

        <canvas id="Elbow" width="600" height="400"></canvas>

        <canvas id="popChart" width="600" height="400"></canvas>

        @*<canvas id="lineChart" width="600" height="600"></canvas>*@

        <div>
            @Html.Raw(MyHtmlHelper.BootstrapTableBody(ViewBag.Head,ViewBag.Table))
        </div>
    }
</div>


@section Scripts {
    @if (ViewBag.FatalError == null)
    {
        @Html.Raw(MyHtmlHelper.BootstrapTableScripts(this.Context,ViewBag.Head))

        <script src="~/lib/chart/chart.umd.min.js"></script>
        <script>
          @*   var lineCanvas = document.getElementById("lineChart");

            @{
                List<string> profileData = new List<string>();
                int profileDataIndex = 1;
                foreach (var item in ViewBag.Centroids)
                {
                    string currentDataset = "{label: \"кластер " + profileDataIndex++ + "\", data: [";
                    List<string> temp = new List<string>();
                    @foreach (var item2 in item)
                    {
                        temp.Add(item2.ToString(System.Globalization.CultureInfo.InvariantCulture));
                    }
                    currentDataset += string.Join(",", temp) + "]}";
                    profileData.Add(currentDataset);
                }
            }

                        var ProfileData = {
                labels: ["@Html.Raw(string.Join("\",\"", ViewBag.CentroidsLabels))"],
                datasets: [@Html.Raw(string.Join(",", profileData))]
            };

            var lineChart = new Chart(lineCanvas, {
                type: 'line',
                data: ProfileData,
                options: {
                    responsive: false,
                    maintainAspectRatio: false,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Профілі кластерів'
                        }
                    }
                }
            });
        *@

            var elbowCanvas = document.getElementById("Elbow");

            @{
                string elbowDataset = "{label: \"різниця в квадраті\", data: [";
                List<string> elbowTemp = new List<string>();
                @foreach (var item2 in ViewBag.Elbow)
                {
                    elbowTemp.Add(item2.ToString(System.Globalization.CultureInfo.InvariantCulture));
                }
                elbowDataset += string.Join(",", elbowTemp) + "]}";
            }

                        var ElbowData = {
                labels: ["@Html.Raw(string.Join("\",\"", Enumerable.Range(1,ViewBag.Elbow.Count)))"],
                datasets: [@Html.Raw(string.Join(",", elbowDataset))]
            };

            var elbowChart = new Chart(elbowCanvas, {
                type: 'line',
                data: ElbowData,
                options: {
                    responsive: false,
                    maintainAspectRatio: false,
                    plugins: {
                        title: {
                            display: true,
                            text: 'метод ліктя'
                        }
                    }
                }
            });

            var popCanvas = document.getElementById("popChart");

            @{
                List<string> popData = new List<string>();
                int popDataIndex = 1;
                foreach (var item in ViewBag.Data)
                {
                    string currentDataset = "{label: \"кластер " + popDataIndex++ + "\", data: [";
                    List<string> temp = new List<string>();
                    @foreach (var item2 in item)
                    {
                        temp.Add($"{{x: {item2[0].ToString(System.Globalization.CultureInfo.InvariantCulture)}, y: {(item2.Count > 1 ? item2[1] : 0).ToString(System.Globalization.CultureInfo.InvariantCulture)}, r: 10}}");
                    }
                    currentDataset += string.Join(",", temp) + "]}";
                    popData.Add(currentDataset);
                }
            }
                        var popData = {
                datasets: [@Html.Raw(string.Join(",", popData))]
            };

            var bubbleChart = new Chart(popCanvas, {
                type: 'bubble',
                data: popData,
                options: {
                    responsive: false,
                    maintainAspectRatio: false,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Кластери'
                        }
                    }
                }
            });
        </script>
    }
}